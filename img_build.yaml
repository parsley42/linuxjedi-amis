---
# img_build.yaml - playbook for creating AMIs for use in LinuxJedi.org
#
# Must be called with '-e target=<ansible host name>'
#
# Example ssh config:
# Match host *.<myawsdom> user ec2-user,centos,ubuntu,build
#     IdentityFile ~/.ssh/<buildkey>.pem
# Host *.<myawsdom>
#     StrictHostKeyChecking false
#     UserKnownHostsFile /dev/null
#     CheckHostIp no
#     User <normalusername>
#     IdentityFile ~/.ssh/<normalsshkey>

- hosts: "{{ target }}"
  name: Wait for DNS
  connection: local
  serial: 1
  tasks:
  # Make sure ansible will connect to the correct host
  - name: Waiting for DNS to sync
    command: echo
    until: "lookup('dig', ansible_host ) == ec2_private_ip_address or lookup('dig', ansible_host ) == ec2_ip_address"
    retries: 60
    delay: 7
    changed_when: false
    when: ec2_ip_address is defined
  - name: Wait for SSH
    wait_for: host={{ ansible_host }} port=22 search_regex=OpenSSH

- hosts: f28img:&{{ target }}
  name: Initialize Fedora
  gather_facts: no
  become: yes
  tasks:
  - raw: dnf -y install python2 python2-libselinux

- hosts: amzn2img:&{{ target }}
  become: yes
  name: Customize the environment
  tasks:
  - set_fact:
      remote_user: ec2-user
  - name: Sudo nopasswd for wheel
    lineinfile: "dest=/etc/sudoers state=present regexp='^%wheel' line='%wheel ALL=(ALL) NOPASSWD: ALL'"
  - name: Install EPEL 7 repository
    yum:
      name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      state: latest
  - name: Install EPEL gpg key
    rpm_key:
      state: present
      key: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
  - name: Install extra packages
    yum:
      name: "{{ item }}"
      state: latest
    with_items:
    - jq
    - python2-pip
    - nodejs
    - rubygem-rdoc
    - git
    - gcc
    - glibc-static
    - ncurses-devel
    - tmux
  - name: Install python modules
    pip:
      name: "{{ item.name }}"
      version: "{{ item.version }}"
      state: present
    with_items:
    - { name: 'ansible', version: '2.6.1' }
    - { name: 'boto', version: '2.48.0' }
    - { name: 'boto3', version: '1.7.62' }
    - { name: 'dnspython', version: '1.15.0' }
  - name: Install Amazon Linux Extras topics
    command: amazon-linux-extras install {{ item.topic }}={{ item.version }}
    with_items:
    - { topic: 'python3', version: '3.6.2' }
    - { topic: 'ruby2.4', version: '2.4.2' }
    - { topic: 'php7.2', version: '7.2.0' }
  - name: Update all packages
    yum:
      name: "*"
      state: latest

- hosts: f28img:&{{ target }}
  become: yes
  name: Customize the environment
  tasks:
  - set_fact:
      remote_user: fedora
  - name: Sudo nopasswd for wheel
    lineinfile: "dest=/etc/sudoers state=present regexp='^%wheel' line='%wheel ALL=(ALL) NOPASSWD: ALL'"
  - name: Install extra packages
    dnf:
      name: "{{ item }}"
      state: latest
    with_items:
    - jq
    - python2-pip
    - nodejs
    - rubygem-rdoc
    - git
    - gcc
    - glibc-static
    - ncurses-devel
    - tmux
    - unzip
  - name: Install python modules
    pip:
      name: "{{ item.name }}"
      version: "{{ item.version }}"
      state: present
    with_items:
    - { name: 'ansible', version: '2.6.1' }
    - { name: 'boto', version: '2.48.0' }
    - { name: 'boto3', version: '1.7.62' }
    - { name: 'dnspython', version: '1.15.0' }
    - { name: 'awscli', version: '1.15.68' }
  - name: Update all packages
    dnf:
      name: "*"
      state: latest

- hosts: u16img:&{{ target }}
  become: yes
  name: Customize the environment
  tasks:
  - set_fact:
      remote_user: ubuntu
  - name: Create wheel group
    group:
      name: wheel
      system: yes
  - name: Sudo nopasswd for wheel
    lineinfile: "dest=/etc/sudoers state=present regexp='^%wheel' line='%wheel ALL=(ALL) NOPASSWD: ALL'"
  - name: Install extra packages
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    with_items:
    - jq
    - python2.7
    - python-pip
    - nodejs
    - ruby
    - libncurses5-dev
    - tmux
    - unzip
    - aptitude
  - name: Install python modules
    pip:
      name: "{{ item.name }}"
      version: "{{ item.version }}"
      state: present
    with_items:
    - { name: 'ansible', version: '2.6.1' }
    - { name: 'boto', version: '2.48.0' }
    - { name: 'boto3', version: '1.7.62' }
    - { name: 'dnspython', version: '1.15.0' }
    - { name: 'awscli', version: '1.15.68' }
  - name: Update all packages
    apt:
      name: "*"
      state: latest

- hosts: "{{ target }}"
  name: Set up ruby-awstools and Go
  become: yes
  roles:
  - ruby-awstools
  - golang

- hosts: "{{ target }}"
  become: yes
  name: Configure standard build user and remove dist user
  tasks:
  - copy:
      src: files/{{ inventory_hostname }}/cloud.cfg
      dest: /etc/cloud/cloud.cfg
      mode: 0644
  - file:
      path: /home/{{ remote_user }}/.ssh/authorized_keys
      state: absent
  - user:
      name: "{{ remote_user }}"
      state: absent
      force: yes
